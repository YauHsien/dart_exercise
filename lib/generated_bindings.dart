// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void twist(
    ffi.Pointer<config> conf,
  ) {
    return _twist(
      conf,
    );
  }

  late final _twistPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<config>)>>(
          'twist');
  late final _twist =
      _twistPtr.asFunction<void Function(ffi.Pointer<config>)>();
}

class config extends ffi.Struct {
  @ffi.Array.multi([128])
  external ffi.Array<ffi.Char> id;

  @ffi.Array.multi([128])
  external ffi.Array<ffi.Char> pwd;

  @ffi.Int()
  external int count;
}
